// Code generated by MockGen. DO NOT EDIT.
// Source: internal/blogs/delivery.go
//
// Generated by this command:
//
//	mockgen -source=internal/blogs/delivery.go -destination=internal/blogs/mock/delivery_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	echo "github.com/labstack/echo/v4"
	gomock "go.uber.org/mock/gomock"
)

// MockHandlers is a mock of Handlers interface.
type MockHandlers struct {
	ctrl     *gomock.Controller
	recorder *MockHandlersMockRecorder
}

// MockHandlersMockRecorder is the mock recorder for MockHandlers.
type MockHandlersMockRecorder struct {
	mock *MockHandlers
}

// NewMockHandlers creates a new mock instance.
func NewMockHandlers(ctrl *gomock.Controller) *MockHandlers {
	mock := &MockHandlers{ctrl: ctrl}
	mock.recorder = &MockHandlersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandlers) EXPECT() *MockHandlersMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockHandlers) Create() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockHandlersMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockHandlers)(nil).Create))
}

// Delete mocks base method.
func (m *MockHandlers) Delete() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockHandlersMockRecorder) Delete() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockHandlers)(nil).Delete))
}

// GetAll mocks base method.
func (m *MockHandlers) GetAll() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockHandlersMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockHandlers)(nil).GetAll))
}

// GetByID mocks base method.
func (m *MockHandlers) GetByID() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// GetByID indicates an expected call of GetByID.
func (mr *MockHandlersMockRecorder) GetByID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockHandlers)(nil).GetByID))
}

// Update mocks base method.
func (m *MockHandlers) Update() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockHandlersMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockHandlers)(nil).Update))
}
